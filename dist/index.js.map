{
  "version": 3,
  "sources": ["../src/calculator.ts", "../src/index.ts"],
  "sourcesContent": ["export function calculateMoneySaved(timeSavedPercentage: number, numberOfEmployees: number, averageAnnualSalary: number) {\n    const totalAnnualSalary = numberOfEmployees * averageAnnualSalary\n    const moneySaved = timeSavedPercentage * totalAnnualSalary\n    return moneySaved\n}\n", "import { calculateMoneySaved} from './calculator'\n\n\n// Variables\nlet averageAnnualSalary: number = 137000;\nlet numberOfEmployees: number | undefined;\nlet moneySaved: number | undefined;\nlet timeSavedPercentage: number = 0.24;\nlet count = 0;\n\n// Get references to form elements and buttons\nconst form = document.getElementById(\"roi-calculator\") as HTMLFormElement;\nconst nextButton = document.getElementById(\"next\") as HTMLDivElement;\nconst prevButton = document.getElementById(\"previous\") as HTMLDivElement;\nconst submitButton = document.getElementById(\"submit\") as HTMLInputElement;\nconst moneySavedInput = document.getElementById(\"money-saved-input\") as HTMLInputElement;\nconst container = document.getElementById(\"roi-calculator_container\") as HTMLDivElement;\n\nconst init = () => {\n    \n    // Event listeners\n    nextButton.addEventListener('click', handleNextButtonClick)\n    nextButton.addEventListener('touchstart', handleNextButtonClick)\n    submitButton.addEventListener('click', handleSubmitButtonClick)\n    submitButton.addEventListener('touchstart', handleSubmitButtonClick)\n    prevButton.addEventListener('click', handlePreviousButtonClick)\n    prevButton.addEventListener('touchstart', handlePreviousButtonClick)\n\n    function handleNextButtonClick(event: Event) {\n        event.preventDefault()\n        count += 1;\n\n        updateNavigationButtons()\n\n        // Get the form inputs\n        const employeesInput = document.getElementById(\"number-of-employees\") as HTMLInputElement\n        // Update the variable values\n        numberOfEmployees = parseFloat(employeesInput.value);\n        }\n    }\n\n    function handleSubmitButtonClick(event: Event) {\n        const formData = getFormData(form, moneySaved)\n\n        container.classList.add('submitted');\n        // Calculate the values\n        if (numberOfEmployees) moneySaved = calculateMoneySaved(timeSavedPercentage, numberOfEmployees, averageAnnualSalary);\n        moneySavedInput.setAttribute(\"value\", `${moneySaved}`);\n        if (moneySaved) updateResults(moneySaved)\n    }\n\n    function handlePreviousButtonClick(event: Event) {\n        event.preventDefault()\n        count -= 1\n        updateNavigationButtons()\n    }\n\n    function updateResults(moneySaved: number) {\n        const moneySavedElement = document.getElementById(\"money-saved\") as HTMLElement;\n        moneySavedElement.textContent = moneySaved.toLocaleString() || \"\";\n    }\n\n    function updateNavigationButtons() {\n        if (count == 0) {\n            prevButton.style.display = \"none\";\n            nextButton.style.display = \"flex\";\n        } else if (count === 3) {\n            prevButton.style.display = \"flex\";\n            nextButton.style.display = \"none\";\n        } else {\n            prevButton.style.display = \"flex\";\n            nextButton.style.display = \"flex\";\n        }\n}\n\nexport function getFormData(form: HTMLFormElement, defaultData: any) {\n    const input = document.getElementById(\"number-of-employees\") as HTMLInputElement;\n\n    if (input) {\n        const value = parseFloat(input.value);\n        return isNaN(value) ? null : value;\n      }\n\n    return null\n  }\n  \ndocument.addEventListener(\"DOMContentLoaded\", init)"],
  "mappings": "MAAO,SAASA,EAAoBC,EAA6BC,EAA2BC,EAA6B,CACrH,IAAMC,EAAoBF,EAAoBC,EAE9C,OADmBF,EAAsBG,CAE7C,CCAA,IAAIC,EAA8B,MAC9BC,EACAC,EACAC,EAA8B,IAC9BC,EAAQ,EAGNC,EAAO,SAAS,eAAe,gBAAgB,EAC/CC,EAAa,SAAS,eAAe,MAAM,EAC3CC,EAAa,SAAS,eAAe,UAAU,EAC/CC,EAAe,SAAS,eAAe,QAAQ,EAC/CC,EAAkB,SAAS,eAAe,mBAAmB,EAC7DC,EAAY,SAAS,eAAe,0BAA0B,EAE9DC,EAAO,IAAM,CAGfL,EAAW,iBAAiB,QAASM,CAAqB,EAC1DN,EAAW,iBAAiB,aAAcM,CAAqB,EAC/DJ,EAAa,iBAAiB,QAASK,CAAuB,EAC9DL,EAAa,iBAAiB,aAAcK,CAAuB,EACnEN,EAAW,iBAAiB,QAASO,CAAyB,EAC9DP,EAAW,iBAAiB,aAAcO,CAAyB,EAEnE,SAASF,EAAsBG,EAAc,CACzCA,EAAM,eAAe,EACrBX,GAAS,EAETY,EAAwB,EAGxB,IAAMC,EAAiB,SAAS,eAAe,qBAAqB,EAEpEhB,EAAoB,WAAWgB,EAAe,KAAK,CACnD,CACJ,EAEA,SAASJ,EAAwBE,EAAc,CAC3C,IAAMG,EAAWC,EAAYd,EAAMH,CAAU,EAE7CQ,EAAU,UAAU,IAAI,WAAW,EAE/BT,IAAmBC,EAAakB,EAAoBjB,EAAqBF,EAAmBD,CAAmB,GACnHS,EAAgB,aAAa,QAAS,GAAGP,GAAY,EACjDA,GAAYmB,EAAcnB,CAAU,CAC5C,CAEA,SAASY,EAA0BC,EAAc,CAC7CA,EAAM,eAAe,EACrBX,GAAS,EACTY,EAAwB,CAC5B,CAEA,SAASK,EAAcnB,EAAoB,CACvC,IAAMoB,EAAoB,SAAS,eAAe,aAAa,EAC/DA,EAAkB,YAAcpB,EAAW,eAAe,GAAK,EACnE,CAEA,SAASc,GAA0B,CAC3BZ,GAAS,GACTG,EAAW,MAAM,QAAU,OAC3BD,EAAW,MAAM,QAAU,QACpBF,IAAU,GACjBG,EAAW,MAAM,QAAU,OAC3BD,EAAW,MAAM,QAAU,SAE3BC,EAAW,MAAM,QAAU,OAC3BD,EAAW,MAAM,QAAU,OAEvC,CAEO,SAASa,EAAYd,EAAuBkB,EAAkB,CACjE,IAAMC,EAAQ,SAAS,eAAe,qBAAqB,EAE3D,GAAIA,EAAO,CACP,IAAMC,EAAQ,WAAWD,EAAM,KAAK,EACpC,OAAO,MAAMC,CAAK,EAAI,KAAOA,CAC/B,CAEF,OAAO,IACT,CAEF,SAAS,iBAAiB,mBAAoBd,CAAI",
  "names": ["calculateMoneySaved", "timeSavedPercentage", "numberOfEmployees", "averageAnnualSalary", "totalAnnualSalary", "averageAnnualSalary", "numberOfEmployees", "moneySaved", "timeSavedPercentage", "count", "form", "nextButton", "prevButton", "submitButton", "moneySavedInput", "container", "init", "handleNextButtonClick", "handleSubmitButtonClick", "handlePreviousButtonClick", "event", "updateNavigationButtons", "employeesInput", "formData", "getFormData", "calculateMoneySaved", "updateResults", "moneySavedElement", "defaultData", "input", "value"]
}
